2002-11-18  Dan Winship  <danw@ximian.com>

	* libsoup/soup-socket.c (struct _SoupSocket): Moved here from
	soup-private.h.
	(soup_socket_connect, soup_socket_server_new, soup_socket_new):
	Take an "ssl" argument saying whether or not to use SSL.
	(soup_socket_new_cb): Call soup_socket_start_ssl if needed.
	(server_accept_internal): Likewise.
	(soup_socket_get_local_address, soup_socket_get_local_port): Get
	the local address/port, regardless of socket type.
	(soup_socket_get_remote_address, soup_socket_get_remote_port): Get
	remote address/port, regardless of socket type.
	(soup_socket_start_ssl): Call soup_ssl_get_iochannel and wrap our
	iochannel with the result.

	* libsoup/soup-connection.c (soup_connection_from_socket): Don't
	need to worry about SSL here.
	(soup_connection_new_cb): Use soup_socket_start_ssl after CONNECT.
	(soup_connection_new_via_proxy): Pass the "ssl" arg to
	soup_socket_connect.
	(soup_connection_get_iochannel): Just call
	soup_socket_get_iochannel. We don't have our own iochannel any
	more.

	* libsoup/soup-server.c (soup_server_new): Pass "ssl" arg to
	soup_socket_server_new.
	(read_headers_cb): Use soup_socket_get_local_address and
	soup_address_get_canonical_name rather than using socket functions
	(conn_accept): Don't need to handle SSL here any more.

	* libsoup/soup-ssl.c (soup_ssl_get_iochannel): Make this take a
	SoupSSLType argument so it can be used for either client or
	server.

	* libsoup/soup-private.h (struct _SoupSocket): Gone. Private to
	soup-socket.c now.
	(struct _SoupConnection): Remove "channel" member.

	* tests/timeserver.c: Fix so that it uses IPv4 again if you don't
	pass "-6", and add a "-s" arg to do SSL.

2002-11-18  Dan Winship  <danw@ximian.com>

	* libsoup/soup-connection.c: New, split SoupConnection stuff out
	of soup-context.c. (A SoupConnection wraps a SoupSocket and also
	handles proxies and keepalive-ness.)

	* libsoup/soup-private.h (struct _SoupConnection): Remove the
	server and context fields, which are no longer relevant to a
	SoupConnection, and the port field, which can be extracted from
	the socket if needed.

	* libsoup/soup-context.c: Remove SoupConnection code and update
	accordingly. (SoupContext still handles try_existing_connections,
	soup_connection_limit, and timeouts to wait for a connection to
	become available.)

	* libsoup/soup-queue.c: Remove proxy-handling code. SoupConnection
	does this itself now.

	* libsoup/soup-socks.c: Make this work at the SoupSocket level
	rather than the SoupConnection level.

	* libsoup/Makefile.am: add soup-connection.[ch]

2002-11-18  Dan Winship  <danw@ximian.com>

	* libsoup/soup-error.c: add SOUP_ERROR_CANT_RESOLVE and
	SOUP_ERROR_CANT_RESOLVE_PROXY. Consistentify the capitalization of
	the transport error phrases.

	* libsoup/soup-address.c: Replace SoupAddressStatus with
	SoupKnownErrorCode (SOUP_ERROR_OK and SOUP_ERROR_CANT_RESOLVE)

	* libsoup/soup-context.c: Replace SoupConnectErrorCode with
	SoupKnownErrorCode (SOUP_ERROR_OK, SOUP_ERROR_CANT_RESOLVE, and
	SOUP_ERROR_CANT_CONNECT)

	* libsoup/soup-socket.c: Replace SoupSocketConnectStatus and
	SoupSocketNewStatus with SoupKnownErrorCode (SOUP_ERROR_OK,
	SOUP_ERROR_CANT_RESOLVE and SOUP_ERROR_CANT_CONNECT).

	* libsoup/*.c: Update for status code changes.
	
2002-11-18  Dan Winship  <danw@ximian.com>

	* libsoup/soup-error.c: Fix spelling of
	SOUP_ERROR_MOVED_PERMANENTLY and its description.

	* tests/simple-httpd.c: Very simple httpd using soup-server, based
	somewhat on the old soup-httpd.

	* tests/Makefile.am (noinst_PROGRAMS): build simple-httpd

2002-11-17  Dan Winship  <danw@ximian.com>

	* libsoup/soup-uri.c: Update with newer code taken from Camel.
	Handles relative URIs, URI parameters and fragments, and does
	%-encoding/decoding in the appropriate places.
	(soup_uri_to_string): Change the second arg to be "just_path",
	which specifies the caller wants just the path (and params and
	query) parts.
	(soup_uri_encode, soup_uri_decode): New.

	* libsoup/soup-auth.c (compute_response): Use soup_uri_to_string.
	(digest_auth_func): Likewise.
	* libsoup/soup-queue.c (soup_get_request_header): Likewise
	* libsoup/soup-server-auth.c (parse_digest): Likewise

	* libsoup/soup-message.c (soup_message_get_request_header, etc):
	Remove long-deprecated API.

	* libsoup/soup-context.c (soup_context_uri_hash,
	soup_context_uri_equal): Don't include query in the comparison.
	Two URIs that are identical except for query can still use the
	same auths.

	* tests/uri-parsing.c: SoupUri test program (also stolen from
	Camel)

	* tests/timeserver.c: Add "-6" to listen on the IPv6 local address
	instead of IPv4. (Tested on OS X.)

	* tests/get.c: Add "-r" for recursive get. (Tests the connection
	re-use and timeout code.)

	* tests/Makefile.am: re-enable timeserver, add uri-parsing.

2002-11-16  Dan Winship  <danw@ximian.com>

	* libsoup/soup-message.c (soup_message_queue): Set the callback
	and user_data before calling soup_queue_message.
	(requeue_read_error, requeue_read_finished, soup_message_requeue):
	Don't need to re-pass callback and user-data to
	soup_queue_message.

	* libsoup/soup-queue.c (soup_queue_message): Just take the
	message, not the callback and user_data (since no code ever
	changes those after they're first passed to soup_message_queue).

	* libsoup/soup-private.h (SoupHost): Add a "port" field.
	(SoupConnections to a given host are already being separated by
	port, and SoupAuths should be as well according to RFC2617).
	(SoupMessagePrivate): Remove unused "timeout_tag" field.
	
	* libsoup/soup-context.c (soup_context_host_hash,
	soup_context_host_equal): SoupHost hash functions.
	(soup_context_from_uri): Make soup_hosts a hash table on SoupHost
	so we can hash on port as well.
	(soup_context_unref): Update for that.
	(try_existing_connections): Don't need to filter on port now since
	the SoupHost will only have connections to a single port.

	* libsoup/soup-address.c (soup_address_hash): Don't use s6_addr32
	since it's apparently non-portable. Use s6_addr instead.
	(soup_gethostbyaddr): fix a sometimes-uninitialized variable.

	* libsoup/soup-socket.c (soup_socket_connect): remove unused
	variable.

	* libsoup/soup-openssl.c (soup_openssl_read): Use gsize.
	* libsoup/soup-server.c (cgi_read): Likewise
	* libsoup/soup-socks.c (soup_socks_write, soup_socks_read):
	Likewise.
	* libsoup/soup-ssl-proxy.c (soup_ssl_proxy_readwrite): Likewise.
	* libsoup/soup-transfer.c (soup_transfer_read_cb,
	soup_transfer_write_cb): Likewise.

2002-11-15  Dan Winship  <danw@ximian.com>

	* libsoup/*: Change old Helix Code refs to Ximian (and update
	copyright dates).

2002-11-15  Frank Belew  <frb@ximian.com>

	* tests/Makefile.am: uncomment lines to make timeserver build 
	correctly
	
2002-11-14  Joe Shaw  <joe@ximian.com>

	* libsoup/soup-address.c (soup_address_new): When we get an
	address from the hash, call our address lookup callback or else
	the connection will hang.

2002-11-13  Dan Winship  <danw@ximian.com>

	* tests/timeserver.c: Oops, commit this.

	* tests/Makefile.am (noinst_PROGRAMS): reenable timeserver.

2002-11-13  Joe Shaw  <joe@ximian.com>

	* libsoup/Makefile.am: Replace the BINDIR define with LIBEXECDIR.
	(install-exec-hook): Install libsoup-ssl-proxy into libexecdir
	instead of bindir.

	* libsoup/soup-openssl.c (soup_openssl_close): Call SSL_shutdown()
	to properly shut down the SSL connection before closing the
	socket.

	* libsoup/soup-ssl-proxy.c (soup_ssl_proxy_readwrite): Close the
	iochannels before quitting the main loop.

	* tests/Makefile.am: disable building timeserver, the source file
	wasn't added.

2002-11-12  Dan Winship  <danw@ximian.com>

	* configure.in: Check for IPv6 support in networking headers.

	* libsoup/soup-address.c: Make the internal structure of
	SoupAddress entirely private, and make SoupAddress be more like a
	hostent and less like a sockaddr. (Ie, make it not have a port
	associated with it.) Document undocumented functions. Add
	completely-untested support for IPv6.
	(soup_address_new_from_sockaddr): New, to parse a sockaddr into a
	SoupAddress and a port.
	(soup_address_ipv4_any, soup_address_ipv6_any): Return static
	addresses corresponding to the IPv6 and IPv6 "any" addresses.
	(soup_address_get_canonical_name): Use inet_ntop/inet_ntoa.
	(soup_address_make_sockaddr): Now constructs a new sockaddr, which
	may be a sockaddr_in or sockaddr_in6.
	(soup_address_gethostname, soup_address_gethostaddr): Remove
	these. They aren't reliable, especially on multihomed hosts.
	(soup_gethostbyname, soup_gethostbyaddr): support IPv6
	(soup_address_new): Keep pending lookups in a separate hash table
	from completed lookups. Fix a bug when canceling a lookup when
	there was more one outstanding request for it.
	(soup_address_lookup_in_cache): Removed.

	* libsoup/soup-socket.c: Add a port field to SoupSocket (since
	it's not in SoupAddress any more).
	(soup_socket_connect): Simplify this. Don't use
	soup_address_lookup_in_cache, just call soup_address_new, since we
	already know the code can deal with the callback being invoked
	immediately.
	(soup_socket_new_sync, soup_socket_new): Take a port argument.
	(soup_socket_server_new): Take a SoupAddress to use as the local
	address to bind to. This lets the caller choose between the IPv4
	and IPv6 "any" addresses, and also lets you bind to a single
	interface of a multi-homed machine.
	(soup_socket_server_accept, soup_socket_server_try_accept): Merge
	the common code.

	* libsoup/soup-server.c (soup_server_new): Pass
	soup_address_ipv4_any() to soup_socket_server_new().

	* libsoup/soup-socks.c (soup_connect_socks_proxy,
	soup_socks_write): Fix up for the API changes, but it won't work
	with IPv6 yet.

	* tests/timeserver.c: Another really simple test, for the server
	socket code.

	* tests/Makefile.am: build timeserver

2002-11-11  Dan Winship  <danw@ximian.com>

	* libsoup/soup-address.c: Move the SoupAddress code from
	soup-socket.c and soup-socket-unix.c to here.

	* libsoup/soup-socket.c: Move the remaining code from
	soup-socket-unix.c here.

	* libsoup/soup-socket-unix.c: Gone

	* tests/get.c: really really trivial test program

	* configure.in (AC_OUTPUT):
	* Makefile.am (SUBDIRS): add tests/

2002-11-05  Dan Winship  <danw@ximian.com>

	* Split libsoup out of soup. ChangeLog.old contains the original
	soup ChangeLog.

	* Makefile.am, etc: Fix things up to work with the new directory
	layout. Disable docs until we fix them.

	* autogen.sh: Use gnome-autogen.sh

	* configure.in: Require autoconf 2.53. Remove stuff that was only
	needed for httpd or wsdl code. Remove glib1 support. Bump version
	to 2.0.

	* libsoup/Makefile.am: Rename library to libsoup-2.0, put includes
	in ${includedir}/soup-2.0
	
	* libsoup/*: Merge soup-0-7 back onto the trunk. Remove
	SOAP-specific stuff, Windows support, and other things that
	weren't being maintained.

	* soup-config.in, soupConf.sh: Kill these. We only support
	pkg-config now.
